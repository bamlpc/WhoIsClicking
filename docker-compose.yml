version: '3.7'

services:

  frontend:
    build:
      context: ./frontend
    container_name: frontend
    restart: on-failure
    depends_on:
      - backend
    stdin_open: true
    tty: true
    ports:
      - '3000:3000'
    networks:
      wic_network:
        aliases: 
          - frontend_ip

  backend:
    build:
      context: ./backend
    restart: on-failure
    depends_on:
      mongodb:
        condition: service_healthy
    container_name: backend
    init: true
    environment:
      - URL=${URL}
      - PORT=${PORT}
      - DB_NAME=${DB_NAME}
      - MONGODB_URL=${MONGODB_URL}
      - MONGODB_USER=${MONGODB_USER}
      - MONGODB_PASS=${MONGODB_PASS}
      - BACKEND_VERSION=${BACKEND_VERSION}
    networks:
      wic_network:
        aliases: 
          - backend_ip

  mongodb:
    build:
      context: ./mongodb
    restart: always
    container_name: mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: $MONGO_ROOT_USER
      MONGO_INITDB_ROOT_PASSWORD: $MONGO_ROOT_PASS
      MONGO_INITDB_DATABASE: $DB_NAME
      MONGO_INITDB_USERNAME: $MONGODB_USER
      MONGO_INITDB_PASSWORD: $MONGODB_PASS
    volumes:
      - ./mongodb/data:/data/db
      - ./mongodb/log:/var/log/mongodb/
      - ./mongodb/mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh:ro
    networks:
      wic_network:
        aliases: 
          - mongodb_ip


  nginx_rproxy:
    build: 
      context: ./nginx
    restart: always
    container_name: nginx_rproxy
    tty: true
    depends_on:
      - backend
    ports:
      - '81:80'
      - '443:443'
    volumes:
      - .nginx/log/:/var/log/syslog
    networks:
      wic_network:
        aliases:
          - nginx_rproxy_ip

volumes:
  mongodb: {}
  jenkins: {}

networks:
  wic_network:
    name: wic_net
    driver: bridge
    ipam:               #ip address management
      driver: default