version: '3.7'

services:

  links-api:
    container_name: links-api
    build:
      context: ./backend/links-api
      dockerfile: dev.Dockerfile
    restart: on-failure
    depends_on:
      mongo-db:
        condition: service_healthy
    init: true
    env_file:
      - ./backend/links-api/app.env
    ports:
      - 8000:8000

  home-ui:
    container_name: home-ui
    build:
      context: ./frontend/home-ui
      dockerfile: Dockerfile
    restart: on-failure
    volumes:
      - ./frontend/home-ui/src:/usr/app/src
      - ./frontend/home-ui/public:/usr/app/public
    depends_on:
      - nginx
    stop_signal: SIGKILL
    stdin_open: true
    environment:
      HOME_UI_URL: http://home-ui:3000
    tty: true
    ports:
      - '3000:3000'


  mongo-db:
    container_name: mongo-db
    build:
      context: ./infra/mongo-db
    restart: always
    volumes:
      - ./infra/mongo-db/data:/data/db
      - ./infra/mongo-db/log:/var/log/mongodb/
    ports:
      - 82:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: Whoisclicking
      MONGO_INITDB_USERNAME: username_for_links_api
      MONGO_INITDB_PASSWORD: password

  nginx:
    container_name: nginx
    build: 
      context: ./infra/nginx
    restart: always
    tty: true
    depends_on:
      - links-api
    ports:
      - "81:80"
    volumes:
      - ./infra/nginx/log/:/var/log/nginx/log

volumes:
  mongo-data: {}
  nginx: {}
  home-ui: {}

networks: {}